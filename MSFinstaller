#!/data/data/com.termux/files/usr/bin/bash -e 
#
# 
#
#
#	Installer framework Metasploit
#	
#
#
# colors
#
YELOW="\e[0;50;93m"
AGUA="\e[0;50;36m"
WHITE="\e[0;50;37m"
RED="\e[0;50;91m"
GREEN="\e[0;50;32m"
MOR="\e[0;49;95m"
FORT="\e[0m"
#
# Colors foreground
declare -r XYELOW='\e[7;100;33m'
#
MSF=$PWD
MSFVERSION=6.0.42
declare -r TERMUX_MD5SUM_MSF=57fb33a6f55c9d1c7e78711008257f48
cd $HOME
#
banner(){
local -r W="\e[1;50;37m"
local -r G='\e[2;50;37m'
local -r R='\e[0;50;31m'
local -r FORT='\e[0m'
printf "${W}
                       .;::l;.                       
                     'dollodoooc                     
                    .ldolllooodx'                    
                     :kkkxdkkxkx.                    
                    .'.'cdkdl,';.                    
                     ....',;.....                    
                      ':cc;:lc.                      
                ${R}.'c;.   ${W}:loc,${R}   .:o:,                
                ....,;;;;;',,;:;,.  .                
                       .:;':c,.                      
                   .','.      .,,..                  
                 ;,'             .;;                 
                    ${G}[ ᴍᴇᴛᴀsᴘʟᴏɪᴛ ]

${FORT}"                                             
}
BannerRuby(){
	printf "${MOR}
┬─┐┬ ┬┌┐ ┬ ┬
├┬┘│ │├┴┐└┬┘
┴└─└─┘└─┘ ┴${WHITE}V:2.7.0${FORT}
"
}
clear
# Eliminacion de fichero existente
rm -rf $PREFIX/bin/msf* $PREFIX/opt/metasploit*
NAME="metasploit-framework-$MSFVERSION.tar.gz"
NOOB=metasploit-framework
RUBY="Ruby-Installer"
declare -r CONFIG="$PREFIX/etc/MSF"
function ERROR()
{
	echo -e "\n${RED}[!] ${AGUA}Hubo un error en la instalacion ${RED}[!]${FORT}\n"
	rm -rf $CONFIG/$NAME
	rm -rf $NOOB
	rm -rf $PREFIX/msf*
	exit 0
}
trap ERROR ERR
#
# Update and package dependence
#
printf "\n${XYELOW}  Installing packages  ${FORT}\n\n"
apt update -y && apt upgrade -y 
apt install -y axel libiconv zlib autoconf bison clang coreutils curl findutils git apr apr-util libffi libgmp libpcap postgresql readline libsqlite openssl libtool libxml2 libxslt ncurses pkg-config wget make  libgrpc termux-tools ncurses-utils ncurses unzip zip tar termux-elf-cleaner
# Many phones are claiming libxml2 not found error
ln -sf $PREFIX/include/libxml2/libxml $PREFIX/include/
clear
#sleep 1
#BannerRuby
#chmod +x $MSF/$RUBY
#$MSF/./$RUBY
#sleep 3
#
# Download Metasploit release github
#
clear
banner
mkdir -p $PREFIX/opt/$NOOB
#
mkdir -p $CONFIG
#
# No existe
#
 [[ ! -f $CONFIG/$NAME ]] && rm -rf $CONFIG/* && printf "\n${GREEN}[${YELOW}+${GREEN}] ${AGUA}%s ${GREEN}[${YELOW}+${GREEN}]${FORT}\n\n" "The download can take 30 minutes" &&  echo -e "\n${XYELOW}  ᴅᴏᴡɴʟᴏᴀᴅɪɴɢ ᴍᴇᴛᴀsᴘʟᴏɪᴛ-ғʀᴀᴍᴇᴡᴏʀᴋ  ${FORT}\n" && axel -n 10 -a https://github.com/rapid7/metasploit-framework/archive/$MSFVERSION.tar.gz -o $CONFIG/$NAME
#
until [[ $(md5sum $CONFIG/$NAME | awk '{print $1}') = "$TERMUX_MD5SUM_MSF" ]]
do
	printf "\n[✗] Incorrect download | check your internet[✗]${FORT}\n\n"
	rm -rf $CONFIG/$NAME
	exit 0
done
# descomprime
#
tar zxf "$CONFIG/$NAME" --strip-components=1 \
        -C "$PREFIX"/opt/$NOOB 
echo -e "\n${GREEN}[*] ${AGUA}  Setting up directories  ${GREEN}[*]${FORT}\n"
msfpath=$PREFIX/opt/$NOOB
cd $msfpath
sleep 2
clear
banner
# Actualizacion de gemas
echo -e "\n${GREEN}[✓] ${AGUA}Gems and settings update ${GREEN}[✓]${FORT}\n"
if [ "$(gem list -i rubygems-update 2>/dev/null)" = "false" ]; then
	gem install --no-document --verbose rubygems-update
fi

# Update rubygems
update_rubygems &>/dev/null
until [[ $? -eq 0 ]]
do
	echo -e "${RED}[!] ${AGUA}Error de update_rubygems ${RED}[!]${FORT}\n"
	exit 1
done
echo -e "\n${WHITE}[✓] ${AGUA}update_rubygems installed${WHITE}[✓]${FORT}\n"
sleep 1
# Install bundler
gem install --no-document --verbose bundle &>/dev/null
until [[ $? -eq 0 ]]
do
	echo -e "${RED}[!] ${AGUA}Error of bundle ${FORT}[!]${FORT}\n"
	exit 1
done
echo -e "\n${WHITE}[✓] ${AGUA}Bundle installed correctly ${WHITE}[✓]\n"
# Installing all gems 
bundle config build.nokogiri --use-system-libraries &>/dev/null
sleep 0.5
bundle install -j3
echo -e "\n${AGUA}Gem Installed Correctly${FORT}\n"
# Some fixes
echo -e "\n${WHITE}[✓] ${AGUA}Configured files ${WHITE}[✓]${FORT}\n"
sed -i "s@/etc/resolv.conf@$PREFIX/etc/resolv.conf@g" $msfpath/lib/net/dns/resolver.rb
find "$msfpath"  -type f -executable -print0 | xargs -0 -r termux-fix-shebang
find "$PREFIX"/lib/ruby/gems -type f -iname \*.so -print0 | xargs -0 -r termux-elf-cleaner
clear
#
# creacion de postgresql
#
echo -e "\n${WHITE}[*] ${AGUA}Creating database PostgreSQL${WHITE}[*]${FORT}\n"
mkdir -p "$msfpath"/config
cat <<- EOF > "$msfpath"/config/database.yml
production:
  adapter: postgresql
  database: msf_database
  username: msf
  password:
  host: 127.0.0.1
  port: 5432
  pool: 75
  timeout: 5
EOF
mkdir -p "$PREFIX"/var/lib/postgresql
sleep 0.3
pg_ctl -D "$PREFIX"/var/lib/postgresql stop > /dev/null 2>&1 || true
if ! pg_ctl -D "$PREFIX"/var/lib/postgresql start --silent; then
    initdb "$PREFIX"/var/lib/postgresql
    pg_ctl -D "$PREFIX"/var/lib/postgresql start --silent
fi
if [ -z "$(psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='msf'")" ]; then
    createuser msf
fi
if [ -z "$(psql -l | grep msf_database)" ]; then
    createdb msf_database
fi
#
#
# Bigdecimal.so
#
#
cat <<- OF > $PREFIX/bin/msfconsole
#!/data/data/com.termux/files/usr/bin/bash
SCRIPT_NAME=\$(basename "\$0")
METASPLOIT_PATH="\${PREFIX}/opt/metasploit-framework"

# set ruby version
android=\$(getprop ro.build.version.release)
if [ \${android%%.*} -ge 7 ]; then
    RUBYVER=2.7.0
else
    RUBYVER=2.6.0
fi
# Fix ruby bigdecimal extensions linking error.
case "\$(uname -m)" in
	aarch64)
		export LD_PRELOAD="\${PREFIX}/lib/ruby/\$RUBYVER/aarch64-linux-android/bigdecimal.so:\$LD_PRELOAD"
		;;
	arm*)
		export LD_PRELOAD="\${PREFIX}/lib/ruby/\$RUBYVER/arm-linux-androideabi/bigdecimal.so:\$LD_PRELOAD"
		;;
	i686)
		export LD_PRELOAD="\${PREFIX}/lib/ruby/\$RUBYVER/i686-linux-android/bigdecimal.so:\$LD_PRELOAD"
		;;
	x86_64)
		export LD_PRELOAD="\${PREFIX}/lib/ruby/\$RUBYVER/x86_64-linux-android/bigdecimal.so:\$LD_PRELOAD"
		;;
	*)
		;;
esac
case "\$SCRIPT_NAME" in
	msfconsole|msfvenom)
		exec ruby "\$METASPLOIT_PATH/\$SCRIPT_NAME" "\$@"
		;;
	*)
		echo "[!] Unknown Metasploit command '\$SCRIPT_NAME'."
		exit 1
		;;
esac
OF
chmod +x $PREFIX/bin/msfconsole
ln -sf $(which msfconsole) $PREFIX/bin/msfvenom
#
#
clear
banner
echo -e "\n\n${YELOW}[✓] ${AGUA}Execute: ${GREEN}[ msfconsole ] ${YELOW}${FORT}\n\n"
#
#			Raul XH
#
